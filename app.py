import streamlit as st
from datetime import datetime
from notebook_functions import predire_matchs, equipes

st.set_page_config(page_title='FootForecast', page_icon='‚öΩÔ∏è', layout='wide', initial_sidebar_state='expanded')

st.markdown('## ‚öΩÔ∏è FootForecast : *Pr√©dictions des matchs de la Premier League*')
gab_url = 'https://ghj95.github.io/portfolio//'
st.markdown(
    f"<a href='{gab_url}' target='_blank' style='text-decoration: none; color: inherit;'>`Par : Gabriel Hardy-Joseph, Karim Ghandour, Louis-Matteo Creplet et Mohamed-Aziz Charfeddine`</a>",
    unsafe_allow_html=True,
)
st.markdown(
    "<span style='text-decoration: none;'><code style='color: inherit;'>Projet r√©alis√© dans le cadre du cours TECH20704</code></span>",
    unsafe_allow_html=True,
)

def appinfo():
    with st.container(border=True):
        st.write("Notre application s'appuie sur un mod√®le de classification **Extreme Gradient Boosting (XGBoost)** entra√Æn√© sur une d√©cennie de r√©sultats historiques (2015-2025). Les pr√©dictions int√®grent la *forme r√©cente des √©quipes*, l'*analyse statistique des matchs pr√©c√©dents* et l'*historique des confrontations directes* entre les clubs.")
        st.write('Les pr√©dictions du mod√®le ne sont pas des certitudes.')

st.sidebar.header('D√©tails du match')
def input_features():
    domicile = st.sidebar.selectbox('√âquipe √† domicile :', (equipes), index=None, placeholder='S√©l√©ctionez une √©quipe...')
    exterieur = st.sidebar.selectbox("√âquipe √† l'ext√©rieur :", (equipes), index=None, placeholder='S√©l√©ctionez une √©quipe...')
    match_date = st.sidebar.date_input('Date du match :', datetime.today())
    return domicile, exterieur, match_date

domicile, exterieur, match_date = input_features()

appinfo()
'---'

prediction = None
if st.sidebar.button('Pr√©dire'):
    valid_input = True
    if domicile and exterieur not in equipes:
        st.error('Veuillez s√©l√©ctionner deux √©quipes parmi celles dans la liste')
        valid_input = False
    if match_date.year > datetime.today().year + 1:
        st.error('Veuillez s√©lectionner une date moins √©loign√©e')
        valid_input = False
    if match_date.year < datetime.today().year - 1:
        st.error('Veuillez s√©lectionner une date moins √©loign√©e')
        valid_input = False
    if valid_input:
        with st.spinner('Chargement des pr√©dictions...'):
            prediction = predire_matchs(domicile, exterieur, match_date)

if prediction == 0:
    st.success(f'Le mod√®le pr√©dit une victoire de **{exterieur}** !', icon='üéØ')
elif prediction == 1:
    st.success(f'Le mod√®le pr√©dit une victoire de **{domicile}** !', icon='üéØ')